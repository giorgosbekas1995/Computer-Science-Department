Terminals unused in grammar

   COMMENT1
   COMMENT2


State 102 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt program
    2        | %empty

    3 stmt: expr SEMICOLON
    4     | ifstmt
    5     | whilestmt
    6     | forstmt
    7     | returnstmt
    8     | BREAK SEMICOLON
    9     | CONTINUE SEMICOLON
   10     | block
   11     | funcdef
   12     | SEMICOLON

   13 expr: assignexpr
   14     | expr OR expr
   15     | expr AND expr
   16     | expr PLUS expr
   17     | expr MINUS expr
   18     | expr MUL expr
   19     | expr DIV expr
   20     | expr MOD expr
   21     | expr EQUALS expr
   22     | expr DIFF expr
   23     | expr GREATER expr
   24     | expr GREATEREQ expr
   25     | expr LESSEREQ expr
   26     | expr LESS expr
   27     | term

   28 term: LEFTPARENTHESIS expr RIGHTPARENTHESIS
   29     | MINUS expr
   30     | NOT expr
   31     | PLUSPLUS lvalue
   32     | lvalue PLUSPLUS
   33     | MINUSMINUS lvalue
   34     | lvalue MINUSMINUS
   35     | primary

   36 assignexpr: lvalue ASSIGN expr

   37 primary: lvalue
   38        | call
   39        | objectdef
   40        | LEFTPARENTHESIS funcdef RIGHTPARENTHESIS
   41        | const

   42 lvalue: IDENT
   43       | LOCAL IDENT
   44       | DOUBLECOLON IDENT
   45       | member

   46 member: lvalue DOT IDENT
   47       | lvalue LEFTBRACKET expr RIGHTBRACKET
   48       | call DOT IDENT
   49       | call LEFTBRACKET expr RIGHTBRACKET

   50 call: call LEFTPARENTHESIS elist RIGHTPARENTHESIS
   51     | lvalue callsuffix
   52     | LEFTPARENTHESIS funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

   53 callsuffix: normcall
   54           | methodcall

   55 normcall: LEFTPARENTHESIS elist RIGHTPARENTHESIS

   56 methodcall: DOUBLEDOT IDENT LEFTPARENTHESIS elist RIGHTPARENTHESIS

   57 save_elist: expr

   58 more_elist: COMMA save_elist more_elist
   59           | %empty

   60 elist: save_elist more_elist
   61      | %empty

   62 objectdef: LEFTBRACKET elist RIGHTBRACKET
   63          | LEFTBRACKET indexed RIGHTBRACKET

   64 more_indexed: COMMA indexedelem more_indexed
   65             | %empty

   66 indexed: indexedelem more_indexed

   67 indexedelem: LEFTBRACE expr COLON expr RIGHTBRACE

   68 blockstmt: blockstmt stmt
   69          | %empty

   70 $@1: %empty

   71 $@2: %empty

   72 block: LEFTBRACE $@1 blockstmt RIGHTBRACE $@2

   73 funcblockstart: %empty

   74 funcblockend: %empty

   75 $@3: %empty

   76 fblock: funcblockstart LEFTBRACE blockstmt RIGHTBRACE $@3 funcblockend

   77 funcname: IDENT
   78         | %empty

   79 funcprefix: FUNCTION funcname

   80 $@4: %empty

   81 funcargs: LEFTPARENTHESIS $@4 idlist RIGHTPARENTHESIS

   82 funcbody: fblock

   83 funcdef: funcprefix funcargs funcbody

   84 const: INTCONST
   85      | REALCONST
   86      | STRING
   87      | NIL
   88      | TRUE
   89      | FALSE

   90 $@5: %empty

   91 more_idlist: COMMA IDENT $@5 more_idlist
   92            | %empty

   93 $@6: %empty

   94 idlist: IDENT $@6 more_idlist
   95       | %empty

   96 ifprefix: IF LEFTPARENTHESIS expr RIGHTPARENTHESIS

   97 elseprefix: ELSE

   98 ifstmt: ifprefix stmt elseprefix stmt
   99       | ifprefix stmt

  100 loopend: %empty

  101 loopstart: %empty

  102 loopstmt: loopstart stmt loopend

  103 whilestart: WHILE

  104 whilesecond: LEFTPARENTHESIS expr RIGHTPARENTHESIS

  105 whilestmt: whilestart whilesecond loopstmt

  106 N: %empty

  107 M: %empty

  108 forprefix: FOR LEFTPARENTHESIS elist SEMICOLON M expr SEMICOLON

  109 forstmt: forprefix N elist RIGHTPARENTHESIS N loopstmt N

  110 returnstmt: RETURN expr SEMICOLON
  111           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
INTCONST (258) 84
REALCONST (259) 85
IDENT (260) 42 43 44 46 48 56 77 91 94
STRING (261) 86
IF (262) 96
ELSE (263) 97
WHILE (264) 103
FOR (265) 108
FUNCTION (266) 79
RETURN (267) 110 111
BREAK (268) 8
CONTINUE (269) 9
AND (270) 15
NOT (271) 30
OR (272) 14
LOCAL (273) 43
TRUE (274) 88
FALSE (275) 89
NIL (276) 87
ASSIGN (277) 36
PLUS (278) 16
MINUS (279) 17 29
MUL (280) 18
DIV (281) 19
MOD (282) 20
EQUALS (283) 21
DIFF (284) 22
PLUSPLUS (285) 31 32
MINUSMINUS (286) 33 34
GREATER (287) 23
LESS (288) 26
GREATEREQ (289) 24
LESSEREQ (290) 25
LEFTBRACE (291) 67 72 76
RIGHTBRACE (292) 67 72 76
LEFTBRACKET (293) 47 49 62 63
RIGHTBRACKET (294) 47 49 62 63
LEFTPARENTHESIS (295) 28 40 50 52 55 56 81 96 104 108
RIGHTPARENTHESIS (296) 28 40 50 52 55 56 81 96 104 109
SEMICOLON (297) 3 8 9 12 108 110 111
COMMA (298) 58 64 91
COLON (299) 67
DOUBLECOLON (300) 44
DOT (301) 46 48
DOUBLEDOT (302) 56
COMMENT1 (303)
COMMENT2 (304)
MINUS2 (305)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2, on right: 0 1
stmt (53)
    on left: 3 4 5 6 7 8 9 10 11 12, on right: 1 68 98 99 102
expr (54)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27, on right:
    3 14 15 16 17 18 19 20 21 22 23 24 25 26 28 29 30 36 47 49 57 67
    96 104 108 110
term (55)
    on left: 28 29 30 31 32 33 34 35, on right: 27
assignexpr (56)
    on left: 36, on right: 13
primary (57)
    on left: 37 38 39 40 41, on right: 35
lvalue (58)
    on left: 42 43 44 45, on right: 31 32 33 34 36 37 46 47 51
member (59)
    on left: 46 47 48 49, on right: 45
call (60)
    on left: 50 51 52, on right: 38 48 49 50
callsuffix (61)
    on left: 53 54, on right: 51
normcall (62)
    on left: 55, on right: 53
methodcall (63)
    on left: 56, on right: 54
save_elist (64)
    on left: 57, on right: 58 60
more_elist (65)
    on left: 58 59, on right: 58 60
elist (66)
    on left: 60 61, on right: 50 52 55 56 62 108 109
objectdef (67)
    on left: 62 63, on right: 39
more_indexed (68)
    on left: 64 65, on right: 64 66
indexed (69)
    on left: 66, on right: 63
indexedelem (70)
    on left: 67, on right: 64 66
blockstmt (71)
    on left: 68 69, on right: 68 72 76
block (72)
    on left: 72, on right: 10
$@1 (73)
    on left: 70, on right: 72
$@2 (74)
    on left: 71, on right: 72
funcblockstart (75)
    on left: 73, on right: 76
funcblockend (76)
    on left: 74, on right: 76
fblock (77)
    on left: 76, on right: 82
$@3 (78)
    on left: 75, on right: 76
funcname (79)
    on left: 77 78, on right: 79
funcprefix (80)
    on left: 79, on right: 83
funcargs (81)
    on left: 81, on right: 83
$@4 (82)
    on left: 80, on right: 81
funcbody (83)
    on left: 82, on right: 83
funcdef (84)
    on left: 83, on right: 11 40 52
const (85)
    on left: 84 85 86 87 88 89, on right: 41
more_idlist (86)
    on left: 91 92, on right: 91 94
$@5 (87)
    on left: 90, on right: 91
idlist (88)
    on left: 94 95, on right: 81
$@6 (89)
    on left: 93, on right: 94
ifprefix (90)
    on left: 96, on right: 98 99
elseprefix (91)
    on left: 97, on right: 98
ifstmt (92)
    on left: 98 99, on right: 4
loopend (93)
    on left: 100, on right: 102
loopstart (94)
    on left: 101, on right: 102
loopstmt (95)
    on left: 102, on right: 105 109
whilestart (96)
    on left: 103, on right: 105
whilesecond (97)
    on left: 104, on right: 105
whilestmt (98)
    on left: 105, on right: 5
N (99)
    on left: 106, on right: 109
M (100)
    on left: 107, on right: 108
forprefix (101)
    on left: 108, on right: 109
forstmt (102)
    on left: 109, on right: 6
returnstmt (103)
    on left: 110 111, on right: 7


State 0

    0 $accept: . program $end

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    IF               shift, and go to state 5
    WHILE            shift, and go to state 6
    FOR              shift, and go to state 7
    FUNCTION         shift, and go to state 8
    RETURN           shift, and go to state 9
    BREAK            shift, and go to state 10
    CONTINUE         shift, and go to state 11
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACE        shift, and go to state 20
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    SEMICOLON        shift, and go to state 23
    DOUBLECOLON      shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 25
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcprefix  go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 1

   84 const: INTCONST .

    $default  reduce using rule 84 (const)


State 2

   85 const: REALCONST .

    $default  reduce using rule 85 (const)


State 3

   42 lvalue: IDENT .

    $default  reduce using rule 42 (lvalue)


State 4

   86 const: STRING .

    $default  reduce using rule 86 (const)


State 5

   96 ifprefix: IF . LEFTPARENTHESIS expr RIGHTPARENTHESIS

    LEFTPARENTHESIS  shift, and go to state 46


State 6

  103 whilestart: WHILE .

    $default  reduce using rule 103 (whilestart)


State 7

  108 forprefix: FOR . LEFTPARENTHESIS elist SEMICOLON M expr SEMICOLON

    LEFTPARENTHESIS  shift, and go to state 47


State 8

   79 funcprefix: FUNCTION . funcname

    IDENT  shift, and go to state 48

    $default  reduce using rule 78 (funcname)

    funcname  go to state 49


State 9

  110 returnstmt: RETURN . expr SEMICOLON
  111           | RETURN . SEMICOLON

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    SEMICOLON        shift, and go to state 50
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 51
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 10

    8 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 11

    9 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 12

   30 term: NOT . expr

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 54
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 13

   43 lvalue: LOCAL . IDENT

    IDENT  shift, and go to state 55


State 14

   88 const: TRUE .

    $default  reduce using rule 88 (const)


State 15

   89 const: FALSE .

    $default  reduce using rule 89 (const)


State 16

   87 const: NIL .

    $default  reduce using rule 87 (const)


State 17

   29 term: MINUS . expr

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 56
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 18

   31 term: PLUSPLUS . lvalue

    IDENT            shift, and go to state 3
    LOCAL            shift, and go to state 13
    LEFTPARENTHESIS  shift, and go to state 57
    DOUBLECOLON      shift, and go to state 24

    lvalue  go to state 58
    member  go to state 32
    call    go to state 59


State 19

   33 term: MINUSMINUS . lvalue

    IDENT            shift, and go to state 3
    LOCAL            shift, and go to state 13
    LEFTPARENTHESIS  shift, and go to state 57
    DOUBLECOLON      shift, and go to state 24

    lvalue  go to state 60
    member  go to state 32
    call    go to state 59


State 20

   72 block: LEFTBRACE . $@1 blockstmt RIGHTBRACE $@2

    $default  reduce using rule 70 ($@1)

    $@1  go to state 61


State 21

   62 objectdef: LEFTBRACKET . elist RIGHTBRACKET
   63          | LEFTBRACKET . indexed RIGHTBRACKET

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACE        shift, and go to state 62
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr         go to state 63
    term         go to state 28
    assignexpr   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    member       go to state 32
    call         go to state 33
    save_elist   go to state 64
    elist        go to state 65
    objectdef    go to state 34
    indexed      go to state 66
    indexedelem  go to state 67
    const        go to state 38


State 22

   28 term: LEFTPARENTHESIS . expr RIGHTPARENTHESIS
   40 primary: LEFTPARENTHESIS . funcdef RIGHTPARENTHESIS
   52 call: LEFTPARENTHESIS . funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    FUNCTION         shift, and go to state 8
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 68
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcprefix  go to state 36
    funcdef     go to state 69
    const       go to state 38


State 23

   12 stmt: SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 24

   44 lvalue: DOUBLECOLON . IDENT

    IDENT  shift, and go to state 70


State 25

    0 $accept: program . $end

    $end  shift, and go to state 71


State 26

    1 program: stmt . program

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    IF               shift, and go to state 5
    WHILE            shift, and go to state 6
    FOR              shift, and go to state 7
    FUNCTION         shift, and go to state 8
    RETURN           shift, and go to state 9
    BREAK            shift, and go to state 10
    CONTINUE         shift, and go to state 11
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACE        shift, and go to state 20
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    SEMICOLON        shift, and go to state 23
    DOUBLECOLON      shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 72
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcprefix  go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 27

    3 stmt: expr . SEMICOLON
   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr

    AND        shift, and go to state 73
    OR         shift, and go to state 74
    PLUS       shift, and go to state 75
    MINUS      shift, and go to state 76
    MUL        shift, and go to state 77
    DIV        shift, and go to state 78
    MOD        shift, and go to state 79
    EQUALS     shift, and go to state 80
    DIFF       shift, and go to state 81
    GREATER    shift, and go to state 82
    LESS       shift, and go to state 83
    GREATEREQ  shift, and go to state 84
    LESSEREQ   shift, and go to state 85
    SEMICOLON  shift, and go to state 86


State 28

   27 expr: term .

    $default  reduce using rule 27 (expr)


State 29

   13 expr: assignexpr .

    $default  reduce using rule 13 (expr)


State 30

   35 term: primary .

    $default  reduce using rule 35 (term)


State 31

   32 term: lvalue . PLUSPLUS
   34     | lvalue . MINUSMINUS
   36 assignexpr: lvalue . ASSIGN expr
   37 primary: lvalue .
   46 member: lvalue . DOT IDENT
   47       | lvalue . LEFTBRACKET expr RIGHTBRACKET
   51 call: lvalue . callsuffix

    ASSIGN           shift, and go to state 87
    PLUSPLUS         shift, and go to state 88
    MINUSMINUS       shift, and go to state 89
    LEFTBRACKET      shift, and go to state 90
    LEFTPARENTHESIS  shift, and go to state 91
    DOT              shift, and go to state 92
    DOUBLEDOT        shift, and go to state 93

    $default  reduce using rule 37 (primary)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 32

   45 lvalue: member .

    $default  reduce using rule 45 (lvalue)


State 33

   38 primary: call .
   48 member: call . DOT IDENT
   49       | call . LEFTBRACKET expr RIGHTBRACKET
   50 call: call . LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTBRACKET      shift, and go to state 97
    LEFTPARENTHESIS  shift, and go to state 98
    DOT              shift, and go to state 99

    $default  reduce using rule 38 (primary)


State 34

   39 primary: objectdef .

    $default  reduce using rule 39 (primary)


State 35

   10 stmt: block .

    $default  reduce using rule 10 (stmt)


State 36

   83 funcdef: funcprefix . funcargs funcbody

    LEFTPARENTHESIS  shift, and go to state 100

    funcargs  go to state 101


State 37

   11 stmt: funcdef .

    $default  reduce using rule 11 (stmt)


State 38

   41 primary: const .

    $default  reduce using rule 41 (primary)


State 39

   98 ifstmt: ifprefix . stmt elseprefix stmt
   99       | ifprefix . stmt

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    IF               shift, and go to state 5
    WHILE            shift, and go to state 6
    FOR              shift, and go to state 7
    FUNCTION         shift, and go to state 8
    RETURN           shift, and go to state 9
    BREAK            shift, and go to state 10
    CONTINUE         shift, and go to state 11
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACE        shift, and go to state 20
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    SEMICOLON        shift, and go to state 23
    DOUBLECOLON      shift, and go to state 24

    stmt        go to state 102
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcprefix  go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 40

    4 stmt: ifstmt .

    $default  reduce using rule 4 (stmt)


State 41

  105 whilestmt: whilestart . whilesecond loopstmt

    LEFTPARENTHESIS  shift, and go to state 103

    whilesecond  go to state 104


State 42

    5 stmt: whilestmt .

    $default  reduce using rule 5 (stmt)


State 43

  109 forstmt: forprefix . N elist RIGHTPARENTHESIS N loopstmt N

    $default  reduce using rule 106 (N)

    N  go to state 105


State 44

    6 stmt: forstmt .

    $default  reduce using rule 6 (stmt)


State 45

    7 stmt: returnstmt .

    $default  reduce using rule 7 (stmt)


State 46

   96 ifprefix: IF LEFTPARENTHESIS . expr RIGHTPARENTHESIS

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 106
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 47

  108 forprefix: FOR LEFTPARENTHESIS . elist SEMICOLON M expr SEMICOLON

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    save_elist  go to state 64
    elist       go to state 107
    objectdef   go to state 34
    const       go to state 38


State 48

   77 funcname: IDENT .

    $default  reduce using rule 77 (funcname)


State 49

   79 funcprefix: FUNCTION funcname .

    $default  reduce using rule 79 (funcprefix)


State 50

  111 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 111 (returnstmt)


State 51

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr
  110 returnstmt: RETURN expr . SEMICOLON

    AND        shift, and go to state 73
    OR         shift, and go to state 74
    PLUS       shift, and go to state 75
    MINUS      shift, and go to state 76
    MUL        shift, and go to state 77
    DIV        shift, and go to state 78
    MOD        shift, and go to state 79
    EQUALS     shift, and go to state 80
    DIFF       shift, and go to state 81
    GREATER    shift, and go to state 82
    LESS       shift, and go to state 83
    GREATEREQ  shift, and go to state 84
    LESSEREQ   shift, and go to state 85
    SEMICOLON  shift, and go to state 108


State 52

    8 stmt: BREAK SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 53

    9 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 54

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr
   30 term: NOT expr .

    $default  reduce using rule 30 (term)


State 55

   43 lvalue: LOCAL IDENT .

    $default  reduce using rule 43 (lvalue)


State 56

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr
   29 term: MINUS expr .

    $default  reduce using rule 29 (term)


State 57

   52 call: LEFTPARENTHESIS . funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

    FUNCTION  shift, and go to state 8

    funcprefix  go to state 36
    funcdef     go to state 109


State 58

   31 term: PLUSPLUS lvalue .
   46 member: lvalue . DOT IDENT
   47       | lvalue . LEFTBRACKET expr RIGHTBRACKET
   51 call: lvalue . callsuffix

    LEFTBRACKET      shift, and go to state 90
    LEFTPARENTHESIS  shift, and go to state 91
    DOT              shift, and go to state 92
    DOUBLEDOT        shift, and go to state 93

    $default  reduce using rule 31 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 59

   48 member: call . DOT IDENT
   49       | call . LEFTBRACKET expr RIGHTBRACKET
   50 call: call . LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTBRACKET      shift, and go to state 97
    LEFTPARENTHESIS  shift, and go to state 98
    DOT              shift, and go to state 99


State 60

   33 term: MINUSMINUS lvalue .
   46 member: lvalue . DOT IDENT
   47       | lvalue . LEFTBRACKET expr RIGHTBRACKET
   51 call: lvalue . callsuffix

    LEFTBRACKET      shift, and go to state 90
    LEFTPARENTHESIS  shift, and go to state 91
    DOT              shift, and go to state 92
    DOUBLEDOT        shift, and go to state 93

    $default  reduce using rule 33 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 61

   72 block: LEFTBRACE $@1 . blockstmt RIGHTBRACE $@2

    $default  reduce using rule 69 (blockstmt)

    blockstmt  go to state 110


State 62

   67 indexedelem: LEFTBRACE . expr COLON expr RIGHTBRACE

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 111
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 63

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr
   57 save_elist: expr .

    AND        shift, and go to state 73
    OR         shift, and go to state 74
    PLUS       shift, and go to state 75
    MINUS      shift, and go to state 76
    MUL        shift, and go to state 77
    DIV        shift, and go to state 78
    MOD        shift, and go to state 79
    EQUALS     shift, and go to state 80
    DIFF       shift, and go to state 81
    GREATER    shift, and go to state 82
    LESS       shift, and go to state 83
    GREATEREQ  shift, and go to state 84
    LESSEREQ   shift, and go to state 85

    $default  reduce using rule 57 (save_elist)


State 64

   60 elist: save_elist . more_elist

    COMMA  shift, and go to state 112

    $default  reduce using rule 59 (more_elist)

    more_elist  go to state 113


State 65

   62 objectdef: LEFTBRACKET elist . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 114


State 66

   63 objectdef: LEFTBRACKET indexed . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 115


State 67

   66 indexed: indexedelem . more_indexed

    COMMA  shift, and go to state 116

    $default  reduce using rule 65 (more_indexed)

    more_indexed  go to state 117


State 68

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr
   28 term: LEFTPARENTHESIS expr . RIGHTPARENTHESIS

    AND               shift, and go to state 73
    OR                shift, and go to state 74
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MUL               shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS            shift, and go to state 80
    DIFF              shift, and go to state 81
    GREATER           shift, and go to state 82
    LESS              shift, and go to state 83
    GREATEREQ         shift, and go to state 84
    LESSEREQ          shift, and go to state 85
    RIGHTPARENTHESIS  shift, and go to state 118


State 69

   40 primary: LEFTPARENTHESIS funcdef . RIGHTPARENTHESIS
   52 call: LEFTPARENTHESIS funcdef . RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 119


State 70

   44 lvalue: DOUBLECOLON IDENT .

    $default  reduce using rule 44 (lvalue)


State 71

    0 $accept: program $end .

    $default  accept


State 72

    1 program: stmt program .

    $default  reduce using rule 1 (program)


State 73

   15 expr: expr AND . expr

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 120
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 74

   14 expr: expr OR . expr

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 121
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 75

   16 expr: expr PLUS . expr

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 122
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 76

   17 expr: expr MINUS . expr

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 123
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 77

   18 expr: expr MUL . expr

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 124
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 78

   19 expr: expr DIV . expr

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 125
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 79

   20 expr: expr MOD . expr

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 126
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 80

   21 expr: expr EQUALS . expr

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 127
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 81

   22 expr: expr DIFF . expr

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 128
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 82

   23 expr: expr GREATER . expr

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 129
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 83

   26 expr: expr LESS . expr

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 130
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 84

   24 expr: expr GREATEREQ . expr

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 131
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 85

   25 expr: expr LESSEREQ . expr

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 132
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 86

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


State 87

   36 assignexpr: lvalue ASSIGN . expr

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 133
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 88

   32 term: lvalue PLUSPLUS .

    $default  reduce using rule 32 (term)


State 89

   34 term: lvalue MINUSMINUS .

    $default  reduce using rule 34 (term)


State 90

   47 member: lvalue LEFTBRACKET . expr RIGHTBRACKET

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 134
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 91

   55 normcall: LEFTPARENTHESIS . elist RIGHTPARENTHESIS

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    save_elist  go to state 64
    elist       go to state 135
    objectdef   go to state 34
    const       go to state 38


State 92

   46 member: lvalue DOT . IDENT

    IDENT  shift, and go to state 136


State 93

   56 methodcall: DOUBLEDOT . IDENT LEFTPARENTHESIS elist RIGHTPARENTHESIS

    IDENT  shift, and go to state 137


State 94

   51 call: lvalue callsuffix .

    $default  reduce using rule 51 (call)


State 95

   53 callsuffix: normcall .

    $default  reduce using rule 53 (callsuffix)


State 96

   54 callsuffix: methodcall .

    $default  reduce using rule 54 (callsuffix)


State 97

   49 member: call LEFTBRACKET . expr RIGHTBRACKET

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 138
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 98

   50 call: call LEFTPARENTHESIS . elist RIGHTPARENTHESIS

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    save_elist  go to state 64
    elist       go to state 139
    objectdef   go to state 34
    const       go to state 38


State 99

   48 member: call DOT . IDENT

    IDENT  shift, and go to state 140


State 100

   81 funcargs: LEFTPARENTHESIS . $@4 idlist RIGHTPARENTHESIS

    $default  reduce using rule 80 ($@4)

    $@4  go to state 141


State 101

   83 funcdef: funcprefix funcargs . funcbody

    $default  reduce using rule 73 (funcblockstart)

    funcblockstart  go to state 142
    fblock          go to state 143
    funcbody        go to state 144


State 102

   98 ifstmt: ifprefix stmt . elseprefix stmt
   99       | ifprefix stmt .

    ELSE  shift, and go to state 145

    ELSE      [reduce using rule 99 (ifstmt)]
    $default  reduce using rule 99 (ifstmt)

    elseprefix  go to state 146


State 103

  104 whilesecond: LEFTPARENTHESIS . expr RIGHTPARENTHESIS

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 147
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 104

  105 whilestmt: whilestart whilesecond . loopstmt

    $default  reduce using rule 101 (loopstart)

    loopstart  go to state 148
    loopstmt   go to state 149


State 105

  109 forstmt: forprefix N . elist RIGHTPARENTHESIS N loopstmt N

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    save_elist  go to state 64
    elist       go to state 150
    objectdef   go to state 34
    const       go to state 38


State 106

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr
   96 ifprefix: IF LEFTPARENTHESIS expr . RIGHTPARENTHESIS

    AND               shift, and go to state 73
    OR                shift, and go to state 74
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MUL               shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS            shift, and go to state 80
    DIFF              shift, and go to state 81
    GREATER           shift, and go to state 82
    LESS              shift, and go to state 83
    GREATEREQ         shift, and go to state 84
    LESSEREQ          shift, and go to state 85
    RIGHTPARENTHESIS  shift, and go to state 151


State 107

  108 forprefix: FOR LEFTPARENTHESIS elist . SEMICOLON M expr SEMICOLON

    SEMICOLON  shift, and go to state 152


State 108

  110 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 110 (returnstmt)


State 109

   52 call: LEFTPARENTHESIS funcdef . RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 153


State 110

   68 blockstmt: blockstmt . stmt
   72 block: LEFTBRACE $@1 blockstmt . RIGHTBRACE $@2

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    IF               shift, and go to state 5
    WHILE            shift, and go to state 6
    FOR              shift, and go to state 7
    FUNCTION         shift, and go to state 8
    RETURN           shift, and go to state 9
    BREAK            shift, and go to state 10
    CONTINUE         shift, and go to state 11
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACE        shift, and go to state 20
    RIGHTBRACE       shift, and go to state 154
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    SEMICOLON        shift, and go to state 23
    DOUBLECOLON      shift, and go to state 24

    stmt        go to state 155
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcprefix  go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 111

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr
   67 indexedelem: LEFTBRACE expr . COLON expr RIGHTBRACE

    AND        shift, and go to state 73
    OR         shift, and go to state 74
    PLUS       shift, and go to state 75
    MINUS      shift, and go to state 76
    MUL        shift, and go to state 77
    DIV        shift, and go to state 78
    MOD        shift, and go to state 79
    EQUALS     shift, and go to state 80
    DIFF       shift, and go to state 81
    GREATER    shift, and go to state 82
    LESS       shift, and go to state 83
    GREATEREQ  shift, and go to state 84
    LESSEREQ   shift, and go to state 85
    COLON      shift, and go to state 156


State 112

   58 more_elist: COMMA . save_elist more_elist

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    save_elist  go to state 157
    objectdef   go to state 34
    const       go to state 38


State 113

   60 elist: save_elist more_elist .

    $default  reduce using rule 60 (elist)


State 114

   62 objectdef: LEFTBRACKET elist RIGHTBRACKET .

    $default  reduce using rule 62 (objectdef)


State 115

   63 objectdef: LEFTBRACKET indexed RIGHTBRACKET .

    $default  reduce using rule 63 (objectdef)


State 116

   64 more_indexed: COMMA . indexedelem more_indexed

    LEFTBRACE  shift, and go to state 62

    indexedelem  go to state 158


State 117

   66 indexed: indexedelem more_indexed .

    $default  reduce using rule 66 (indexed)


State 118

   28 term: LEFTPARENTHESIS expr RIGHTPARENTHESIS .

    $default  reduce using rule 28 (term)


State 119

   40 primary: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS .
   52 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS . LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTPARENTHESIS  shift, and go to state 159

    $default  reduce using rule 40 (primary)


State 120

   14 expr: expr . OR expr
   15     | expr . AND expr
   15     | expr AND expr .
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr

    PLUS       shift, and go to state 75
    MINUS      shift, and go to state 76
    MUL        shift, and go to state 77
    DIV        shift, and go to state 78
    MOD        shift, and go to state 79
    EQUALS     shift, and go to state 80
    DIFF       shift, and go to state 81
    GREATER    shift, and go to state 82
    LESS       shift, and go to state 83
    GREATEREQ  shift, and go to state 84
    LESSEREQ   shift, and go to state 85

    $default  reduce using rule 15 (expr)


State 121

   14 expr: expr . OR expr
   14     | expr OR expr .
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr

    AND        shift, and go to state 73
    PLUS       shift, and go to state 75
    MINUS      shift, and go to state 76
    MUL        shift, and go to state 77
    DIV        shift, and go to state 78
    MOD        shift, and go to state 79
    EQUALS     shift, and go to state 80
    DIFF       shift, and go to state 81
    GREATER    shift, and go to state 82
    LESS       shift, and go to state 83
    GREATEREQ  shift, and go to state 84
    LESSEREQ   shift, and go to state 85

    $default  reduce using rule 14 (expr)


State 122

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   16     | expr PLUS expr .
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr

    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 16 (expr)


State 123

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   17     | expr MINUS expr .
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr

    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 17 (expr)


State 124

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   18     | expr MUL expr .
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr

    $default  reduce using rule 18 (expr)


State 125

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   19     | expr DIV expr .
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr

    $default  reduce using rule 19 (expr)


State 126

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   20     | expr MOD expr .
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr

    $default  reduce using rule 20 (expr)


State 127

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   21     | expr EQUALS expr .
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr

    PLUS       shift, and go to state 75
    MINUS      shift, and go to state 76
    MUL        shift, and go to state 77
    DIV        shift, and go to state 78
    MOD        shift, and go to state 79
    GREATER    shift, and go to state 82
    LESS       shift, and go to state 83
    GREATEREQ  shift, and go to state 84
    LESSEREQ   shift, and go to state 85

    EQUALS  error (nonassociative)
    DIFF    error (nonassociative)

    $default  reduce using rule 21 (expr)


State 128

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   22     | expr DIFF expr .
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr

    PLUS       shift, and go to state 75
    MINUS      shift, and go to state 76
    MUL        shift, and go to state 77
    DIV        shift, and go to state 78
    MOD        shift, and go to state 79
    GREATER    shift, and go to state 82
    LESS       shift, and go to state 83
    GREATEREQ  shift, and go to state 84
    LESSEREQ   shift, and go to state 85

    EQUALS  error (nonassociative)
    DIFF    error (nonassociative)

    $default  reduce using rule 22 (expr)


State 129

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   23     | expr GREATER expr .
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MUL    shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER    error (nonassociative)
    LESS       error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESSEREQ   error (nonassociative)

    $default  reduce using rule 23 (expr)


State 130

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr
   26     | expr LESS expr .

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MUL    shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER    error (nonassociative)
    LESS       error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESSEREQ   error (nonassociative)

    $default  reduce using rule 26 (expr)


State 131

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   24     | expr GREATEREQ expr .
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MUL    shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER    error (nonassociative)
    LESS       error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESSEREQ   error (nonassociative)

    $default  reduce using rule 24 (expr)


State 132

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   25     | expr LESSEREQ expr .
   26     | expr . LESS expr

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MUL    shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER    error (nonassociative)
    LESS       error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESSEREQ   error (nonassociative)

    $default  reduce using rule 25 (expr)


State 133

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr
   36 assignexpr: lvalue ASSIGN expr .

    AND        shift, and go to state 73
    OR         shift, and go to state 74
    PLUS       shift, and go to state 75
    MINUS      shift, and go to state 76
    MUL        shift, and go to state 77
    DIV        shift, and go to state 78
    MOD        shift, and go to state 79
    EQUALS     shift, and go to state 80
    DIFF       shift, and go to state 81
    GREATER    shift, and go to state 82
    LESS       shift, and go to state 83
    GREATEREQ  shift, and go to state 84
    LESSEREQ   shift, and go to state 85

    $default  reduce using rule 36 (assignexpr)


State 134

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr
   47 member: lvalue LEFTBRACKET expr . RIGHTBRACKET

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MUL           shift, and go to state 77
    DIV           shift, and go to state 78
    MOD           shift, and go to state 79
    EQUALS        shift, and go to state 80
    DIFF          shift, and go to state 81
    GREATER       shift, and go to state 82
    LESS          shift, and go to state 83
    GREATEREQ     shift, and go to state 84
    LESSEREQ      shift, and go to state 85
    RIGHTBRACKET  shift, and go to state 160


State 135

   55 normcall: LEFTPARENTHESIS elist . RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 161


State 136

   46 member: lvalue DOT IDENT .

    $default  reduce using rule 46 (member)


State 137

   56 methodcall: DOUBLEDOT IDENT . LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTPARENTHESIS  shift, and go to state 162


State 138

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr
   49 member: call LEFTBRACKET expr . RIGHTBRACKET

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MUL           shift, and go to state 77
    DIV           shift, and go to state 78
    MOD           shift, and go to state 79
    EQUALS        shift, and go to state 80
    DIFF          shift, and go to state 81
    GREATER       shift, and go to state 82
    LESS          shift, and go to state 83
    GREATEREQ     shift, and go to state 84
    LESSEREQ      shift, and go to state 85
    RIGHTBRACKET  shift, and go to state 163


State 139

   50 call: call LEFTPARENTHESIS elist . RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 164


State 140

   48 member: call DOT IDENT .

    $default  reduce using rule 48 (member)


State 141

   81 funcargs: LEFTPARENTHESIS $@4 . idlist RIGHTPARENTHESIS

    IDENT  shift, and go to state 165

    $default  reduce using rule 95 (idlist)

    idlist  go to state 166


State 142

   76 fblock: funcblockstart . LEFTBRACE blockstmt RIGHTBRACE $@3 funcblockend

    LEFTBRACE  shift, and go to state 167


State 143

   82 funcbody: fblock .

    $default  reduce using rule 82 (funcbody)


State 144

   83 funcdef: funcprefix funcargs funcbody .

    $default  reduce using rule 83 (funcdef)


State 145

   97 elseprefix: ELSE .

    $default  reduce using rule 97 (elseprefix)


State 146

   98 ifstmt: ifprefix stmt elseprefix . stmt

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    IF               shift, and go to state 5
    WHILE            shift, and go to state 6
    FOR              shift, and go to state 7
    FUNCTION         shift, and go to state 8
    RETURN           shift, and go to state 9
    BREAK            shift, and go to state 10
    CONTINUE         shift, and go to state 11
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACE        shift, and go to state 20
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    SEMICOLON        shift, and go to state 23
    DOUBLECOLON      shift, and go to state 24

    stmt        go to state 168
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcprefix  go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 147

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr
  104 whilesecond: LEFTPARENTHESIS expr . RIGHTPARENTHESIS

    AND               shift, and go to state 73
    OR                shift, and go to state 74
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MUL               shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS            shift, and go to state 80
    DIFF              shift, and go to state 81
    GREATER           shift, and go to state 82
    LESS              shift, and go to state 83
    GREATEREQ         shift, and go to state 84
    LESSEREQ          shift, and go to state 85
    RIGHTPARENTHESIS  shift, and go to state 169


State 148

  102 loopstmt: loopstart . stmt loopend

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    IF               shift, and go to state 5
    WHILE            shift, and go to state 6
    FOR              shift, and go to state 7
    FUNCTION         shift, and go to state 8
    RETURN           shift, and go to state 9
    BREAK            shift, and go to state 10
    CONTINUE         shift, and go to state 11
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACE        shift, and go to state 20
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    SEMICOLON        shift, and go to state 23
    DOUBLECOLON      shift, and go to state 24

    stmt        go to state 170
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcprefix  go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 149

  105 whilestmt: whilestart whilesecond loopstmt .

    $default  reduce using rule 105 (whilestmt)


State 150

  109 forstmt: forprefix N elist . RIGHTPARENTHESIS N loopstmt N

    RIGHTPARENTHESIS  shift, and go to state 171


State 151

   96 ifprefix: IF LEFTPARENTHESIS expr RIGHTPARENTHESIS .

    $default  reduce using rule 96 (ifprefix)


State 152

  108 forprefix: FOR LEFTPARENTHESIS elist SEMICOLON . M expr SEMICOLON

    $default  reduce using rule 107 (M)

    M  go to state 172


State 153

   52 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS . LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTPARENTHESIS  shift, and go to state 159


State 154

   72 block: LEFTBRACE $@1 blockstmt RIGHTBRACE . $@2

    $default  reduce using rule 71 ($@2)

    $@2  go to state 173


State 155

   68 blockstmt: blockstmt stmt .

    $default  reduce using rule 68 (blockstmt)


State 156

   67 indexedelem: LEFTBRACE expr COLON . expr RIGHTBRACE

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 174
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 157

   58 more_elist: COMMA save_elist . more_elist

    COMMA  shift, and go to state 112

    $default  reduce using rule 59 (more_elist)

    more_elist  go to state 175


State 158

   64 more_indexed: COMMA indexedelem . more_indexed

    COMMA  shift, and go to state 116

    $default  reduce using rule 65 (more_indexed)

    more_indexed  go to state 176


State 159

   52 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS LEFTPARENTHESIS . elist RIGHTPARENTHESIS

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    save_elist  go to state 64
    elist       go to state 177
    objectdef   go to state 34
    const       go to state 38


State 160

   47 member: lvalue LEFTBRACKET expr RIGHTBRACKET .

    $default  reduce using rule 47 (member)


State 161

   55 normcall: LEFTPARENTHESIS elist RIGHTPARENTHESIS .

    $default  reduce using rule 55 (normcall)


State 162

   56 methodcall: DOUBLEDOT IDENT LEFTPARENTHESIS . elist RIGHTPARENTHESIS

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    save_elist  go to state 64
    elist       go to state 178
    objectdef   go to state 34
    const       go to state 38


State 163

   49 member: call LEFTBRACKET expr RIGHTBRACKET .

    $default  reduce using rule 49 (member)


State 164

   50 call: call LEFTPARENTHESIS elist RIGHTPARENTHESIS .

    $default  reduce using rule 50 (call)


State 165

   94 idlist: IDENT . $@6 more_idlist

    $default  reduce using rule 93 ($@6)

    $@6  go to state 179


State 166

   81 funcargs: LEFTPARENTHESIS $@4 idlist . RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 180


State 167

   76 fblock: funcblockstart LEFTBRACE . blockstmt RIGHTBRACE $@3 funcblockend

    $default  reduce using rule 69 (blockstmt)

    blockstmt  go to state 181


State 168

   98 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 98 (ifstmt)


State 169

  104 whilesecond: LEFTPARENTHESIS expr RIGHTPARENTHESIS .

    $default  reduce using rule 104 (whilesecond)


State 170

  102 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 100 (loopend)

    loopend  go to state 182


State 171

  109 forstmt: forprefix N elist RIGHTPARENTHESIS . N loopstmt N

    $default  reduce using rule 106 (N)

    N  go to state 183


State 172

  108 forprefix: FOR LEFTPARENTHESIS elist SEMICOLON M . expr SEMICOLON

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    DOUBLECOLON      shift, and go to state 24

    expr        go to state 184
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 173

   72 block: LEFTBRACE $@1 blockstmt RIGHTBRACE $@2 .

    $default  reduce using rule 72 (block)


State 174

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr
   67 indexedelem: LEFTBRACE expr COLON expr . RIGHTBRACE

    AND         shift, and go to state 73
    OR          shift, and go to state 74
    PLUS        shift, and go to state 75
    MINUS       shift, and go to state 76
    MUL         shift, and go to state 77
    DIV         shift, and go to state 78
    MOD         shift, and go to state 79
    EQUALS      shift, and go to state 80
    DIFF        shift, and go to state 81
    GREATER     shift, and go to state 82
    LESS        shift, and go to state 83
    GREATEREQ   shift, and go to state 84
    LESSEREQ    shift, and go to state 85
    RIGHTBRACE  shift, and go to state 185


State 175

   58 more_elist: COMMA save_elist more_elist .

    $default  reduce using rule 58 (more_elist)


State 176

   64 more_indexed: COMMA indexedelem more_indexed .

    $default  reduce using rule 64 (more_indexed)


State 177

   52 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist . RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 186


State 178

   56 methodcall: DOUBLEDOT IDENT LEFTPARENTHESIS elist . RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 187


State 179

   94 idlist: IDENT $@6 . more_idlist

    COMMA  shift, and go to state 188

    $default  reduce using rule 92 (more_idlist)

    more_idlist  go to state 189


State 180

   81 funcargs: LEFTPARENTHESIS $@4 idlist RIGHTPARENTHESIS .

    $default  reduce using rule 81 (funcargs)


State 181

   68 blockstmt: blockstmt . stmt
   76 fblock: funcblockstart LEFTBRACE blockstmt . RIGHTBRACE $@3 funcblockend

    INTCONST         shift, and go to state 1
    REALCONST        shift, and go to state 2
    IDENT            shift, and go to state 3
    STRING           shift, and go to state 4
    IF               shift, and go to state 5
    WHILE            shift, and go to state 6
    FOR              shift, and go to state 7
    FUNCTION         shift, and go to state 8
    RETURN           shift, and go to state 9
    BREAK            shift, and go to state 10
    CONTINUE         shift, and go to state 11
    NOT              shift, and go to state 12
    LOCAL            shift, and go to state 13
    TRUE             shift, and go to state 14
    FALSE            shift, and go to state 15
    NIL              shift, and go to state 16
    MINUS            shift, and go to state 17
    PLUSPLUS         shift, and go to state 18
    MINUSMINUS       shift, and go to state 19
    LEFTBRACE        shift, and go to state 20
    RIGHTBRACE       shift, and go to state 190
    LEFTBRACKET      shift, and go to state 21
    LEFTPARENTHESIS  shift, and go to state 22
    SEMICOLON        shift, and go to state 23
    DOUBLECOLON      shift, and go to state 24

    stmt        go to state 155
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcprefix  go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 182

  102 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 102 (loopstmt)


State 183

  109 forstmt: forprefix N elist RIGHTPARENTHESIS N . loopstmt N

    $default  reduce using rule 101 (loopstart)

    loopstart  go to state 148
    loopstmt   go to state 191


State 184

   14 expr: expr . OR expr
   15     | expr . AND expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | expr . EQUALS expr
   22     | expr . DIFF expr
   23     | expr . GREATER expr
   24     | expr . GREATEREQ expr
   25     | expr . LESSEREQ expr
   26     | expr . LESS expr
  108 forprefix: FOR LEFTPARENTHESIS elist SEMICOLON M expr . SEMICOLON

    AND        shift, and go to state 73
    OR         shift, and go to state 74
    PLUS       shift, and go to state 75
    MINUS      shift, and go to state 76
    MUL        shift, and go to state 77
    DIV        shift, and go to state 78
    MOD        shift, and go to state 79
    EQUALS     shift, and go to state 80
    DIFF       shift, and go to state 81
    GREATER    shift, and go to state 82
    LESS       shift, and go to state 83
    GREATEREQ  shift, and go to state 84
    LESSEREQ   shift, and go to state 85
    SEMICOLON  shift, and go to state 192


State 185

   67 indexedelem: LEFTBRACE expr COLON expr RIGHTBRACE .

    $default  reduce using rule 67 (indexedelem)


State 186

   52 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS .

    $default  reduce using rule 52 (call)


State 187

   56 methodcall: DOUBLEDOT IDENT LEFTPARENTHESIS elist RIGHTPARENTHESIS .

    $default  reduce using rule 56 (methodcall)


State 188

   91 more_idlist: COMMA . IDENT $@5 more_idlist

    IDENT  shift, and go to state 193


State 189

   94 idlist: IDENT $@6 more_idlist .

    $default  reduce using rule 94 (idlist)


State 190

   76 fblock: funcblockstart LEFTBRACE blockstmt RIGHTBRACE . $@3 funcblockend

    $default  reduce using rule 75 ($@3)

    $@3  go to state 194


State 191

  109 forstmt: forprefix N elist RIGHTPARENTHESIS N loopstmt . N

    $default  reduce using rule 106 (N)

    N  go to state 195


State 192

  108 forprefix: FOR LEFTPARENTHESIS elist SEMICOLON M expr SEMICOLON .

    $default  reduce using rule 108 (forprefix)


State 193

   91 more_idlist: COMMA IDENT . $@5 more_idlist

    $default  reduce using rule 90 ($@5)

    $@5  go to state 196


State 194

   76 fblock: funcblockstart LEFTBRACE blockstmt RIGHTBRACE $@3 . funcblockend

    $default  reduce using rule 74 (funcblockend)

    funcblockend  go to state 197


State 195

  109 forstmt: forprefix N elist RIGHTPARENTHESIS N loopstmt N .

    $default  reduce using rule 109 (forstmt)


State 196

   91 more_idlist: COMMA IDENT $@5 . more_idlist

    COMMA  shift, and go to state 188

    $default  reduce using rule 92 (more_idlist)

    more_idlist  go to state 198


State 197

   76 fblock: funcblockstart LEFTBRACE blockstmt RIGHTBRACE $@3 funcblockend .

    $default  reduce using rule 76 (fblock)


State 198

   91 more_idlist: COMMA IDENT $@5 more_idlist .

    $default  reduce using rule 91 (more_idlist)
